
<item rdf:about='http://www.ietf.org/internet-drafts/draft-vanderstok-core-etch-00.txt'>
    <title>"Patch and Fetch Methods for Constrained Application Protocol (CoAP)", Peter Van der Stok, Carsten Bormann, Anuj Sehgal</title>
    <link>http://www.ietf.org/internet-drafts/draft-vanderstok-core-etch-00.txt</link>
    <description>The existing Constrained Application Protocol (CoAP) methods only allow access to a complete resource.  This does not permit applications to access parts of a resource.  In case of resources with larger or complex data, or in situations where a resource continuity is required, replacing or requesting the whole resource is undesirable.  Several applications using CoAP will need to perform partial resource accesses.  Similar to HTTP, the existing Constrained Application Protocol (CoAP) GET method only allows the specification of a URI and request parameters in CoAP options, not the transfer of a request payload detailing the request.  This leads to some applications to using POST where actually a cacheable, idempotent, safe request is desired.  Again similar to HTTP, the existing Constrained Application Protocol (CoAP) PUT method only allows to replace a complete resource.  This also leads applications to use POST where actually a cacheable, possibly idempotent request is desired.  This specification adds new CoAP methods, FETCH, to perform the equivalent of a GET with a request body; and the twin methods PATCH and iPATCH, to modify parts of an existing CoAP resource.</description>
    <dc:date>2016-03-21T07:00:00-00:00</dc:date>
</item>
