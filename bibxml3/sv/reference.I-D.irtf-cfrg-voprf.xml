<?xml version='1.0' encoding='UTF-8'?>

<reference anchor='I-D.irtf-cfrg-voprf'>
<front>
<title>Oblivious Pseudorandom Functions (OPRFs) using Prime-Order Groups</title>
<author initials='A' surname='Davidson' fullname='Alex Davidson'>
<organization />
</author>
<author initials='A' surname='Faz-Hernandez' fullname='Armando Faz-Hernandez'>
<organization />
</author>
<author initials='N' surname='Sullivan' fullname='Nick Sullivan'>
<organization />
</author>
<author initials='C' surname='Wood' fullname='Christopher Wood'>
<organization />
</author>
<date year='2022' month='February' day='08' />
<abstract><t>An Oblivious Pseudorandom Function (OPRF) is a two-party protocol between client and server for computing the output of a Pseudorandom Function (PRF).  The server provides the PRF secret key, and the client provides the PRF input.  At the end of the protocol, the client learns the PRF output without learning anything about the PRF secret key, and the server learns neither the PRF input nor output. An OPRF can also satisfy a notion of 'verifiability', called a VOPRF. A VOPRF ensures clients can verify that the server used a specific private key during the execution of the protocol.  A VOPRF can also be partially-oblivious, called a POPRF.  A POPRF allows clients and servers to provide public input to the PRF computation.  This document specifies an OPRF, VOPRF, and POPRF instantiated within standard prime-order groups, including elliptic curves.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-irtf-cfrg-voprf-09'/>
<format type='TXT' target='https://www.ietf.org/internet-drafts/draft-irtf-cfrg-voprf-09.txt'/>
</reference>
